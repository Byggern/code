
Byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000086  00800100  00000c90  00000d24  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c90  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800186  00800186  00000daa  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000daa  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  00000e06  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000686  00000000  00000000  00000e96  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000003f3  00000000  00000000  0000151c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003af  00000000  00000000  0000190f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000fc  00000000  00000000  00001cc0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000026c  00000000  00000000  00001dbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000360  00000000  00000000  00002028  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00002388  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e0 e9       	ldi	r30, 0x90	; 144
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a6 38       	cpi	r26, 0x86	; 134
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a6 e8       	ldi	r26, 0x86	; 134
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a0 39       	cpi	r26, 0x90	; 144
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 46 06 	jmp	0xc8c	; 0xc8c <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
/* default output is to COM1. */


int main(void)
{
	UART0_init(F_CPU, UART0_BAUDRATE);
  ae:	20 e8       	ldi	r18, 0x80	; 128
  b0:	35 e2       	ldi	r19, 0x25	; 37
  b2:	40 e0       	ldi	r20, 0x00	; 0
  b4:	50 e0       	ldi	r21, 0x00	; 0
  b6:	60 e8       	ldi	r22, 0x80	; 128
  b8:	73 ef       	ldi	r23, 0xF3	; 243
  ba:	8a e4       	ldi	r24, 0x4A	; 74
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	0e 94 78 00 	call	0xf0	; 0xf0 <UART0_init>
	SRAM_init();
  c2:	0e 94 74 00 	call	0xe8	; 0xe8 <SRAM_init>
	printf("Program Start");
  c6:	8a e0       	ldi	r24, 0x0A	; 10
  c8:	91 e0       	ldi	r25, 0x01	; 1
  ca:	9f 93       	push	r25
  cc:	8f 93       	push	r24
  ce:	0e 94 cb 01 	call	0x396	; 0x396 <printf>
	set_bit(DDRB,2);
  d2:	ba 9a       	sbi	0x17, 2	; 23
	set_bit(PORTB,2);	
  d4:	c2 9a       	sbi	0x18, 2	; 24
  d6:	0f 90       	pop	r0
  d8:	0f 90       	pop	r0
		/*
		printf("%d", inc);
		printf(" stuff\n");
		_delay_ms(500);
		*/
		toggle_bit(PORTB,2);
  da:	c4 e0       	ldi	r28, 0x04	; 4
	set_bit(PORTB,2);	
	unsigned int inc = 1;
	unsigned char * addr = 0;
    while(1)
    {
		SRAM_test();
  dc:	0e 94 b5 00 	call	0x16a	; 0x16a <SRAM_test>
		/*
		printf("%d", inc);
		printf(" stuff\n");
		_delay_ms(500);
		*/
		toggle_bit(PORTB,2);
  e0:	88 b3       	in	r24, 0x18	; 24
  e2:	8c 27       	eor	r24, r28
  e4:	88 bb       	out	0x18, r24	; 24
  e6:	fa cf       	rjmp	.-12     	; 0xdc <main+0x2e>

000000e8 <SRAM_init>:
#include <avr/io.h>
#include "../macros.h"

void SRAM_init(void) {
	set_bit(MCUCR, SRE);
  e8:	85 b7       	in	r24, 0x35	; 53
  ea:	80 68       	ori	r24, 0x80	; 128
  ec:	85 bf       	out	0x35, r24	; 53
  ee:	08 95       	ret

000000f0 <UART0_init>:
#include <avr/io.h>
#include "UART_driver.h"
#include <stdint.h>
#include <stdio.h>

void UART0_init(uint32_t clock, uint32_t baud){
  f0:	0f 93       	push	r16
  f2:	1f 93       	push	r17
	uint32_t ubrr = (clock /(16 * baud)) - 1;
  f4:	89 01       	movw	r16, r18
  f6:	9a 01       	movw	r18, r20
  f8:	00 0f       	add	r16, r16
  fa:	11 1f       	adc	r17, r17
  fc:	22 1f       	adc	r18, r18
  fe:	33 1f       	adc	r19, r19
 100:	00 0f       	add	r16, r16
 102:	11 1f       	adc	r17, r17
 104:	22 1f       	adc	r18, r18
 106:	33 1f       	adc	r19, r19
 108:	a9 01       	movw	r20, r18
 10a:	98 01       	movw	r18, r16
 10c:	22 0f       	add	r18, r18
 10e:	33 1f       	adc	r19, r19
 110:	44 1f       	adc	r20, r20
 112:	55 1f       	adc	r21, r21
 114:	22 0f       	add	r18, r18
 116:	33 1f       	adc	r19, r19
 118:	44 1f       	adc	r20, r20
 11a:	55 1f       	adc	r21, r21
 11c:	0e 94 00 01 	call	0x200	; 0x200 <__udivmodsi4>
 120:	da 01       	movw	r26, r20
 122:	c9 01       	movw	r24, r18
 124:	01 97       	sbiw	r24, 0x01	; 1
 126:	a1 09       	sbc	r26, r1
 128:	b1 09       	sbc	r27, r1
	UBRR0H = (unsigned char) (ubrr >> 8);
 12a:	49 2f       	mov	r20, r25
 12c:	5a 2f       	mov	r21, r26
 12e:	6b 2f       	mov	r22, r27
 130:	77 27       	eor	r23, r23
 132:	40 bd       	out	0x20, r20	; 32
	UBRR0L = (unsigned char) (ubrr);
 134:	89 b9       	out	0x09, r24	; 9
	UCSR0B = (1 << RXEN0) | (1 << TXEN0); // Set RX-enable and TX-enable bits
 136:	88 e1       	ldi	r24, 0x18	; 24
 138:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = (1 << URSEL0) | (0b11 << UCSZ00) | (0b00 << UPM00) | (1 << USBS0); // ( UCSR0C register enable ) | ( 8-bit character size ) | ( disable parity ) | ( 2 stop bits )
 13a:	8e e8       	ldi	r24, 0x8E	; 142
 13c:	80 bd       	out	0x20, r24	; 32

	FILE * uart0_stream = fdevopen(UART0_put,NULL);
 13e:	60 e0       	ldi	r22, 0x00	; 0
 140:	70 e0       	ldi	r23, 0x00	; 0
 142:	80 eb       	ldi	r24, 0xB0	; 176
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	0e 94 80 01 	call	0x300	; 0x300 <fdevopen>
	stdout = uart0_stream;
 14a:	90 93 89 01 	sts	0x0189, r25
 14e:	80 93 88 01 	sts	0x0188, r24
}
 152:	1f 91       	pop	r17
 154:	0f 91       	pop	r16
 156:	08 95       	ret

00000158 <UART0_transmit>:

void UART0_transmit(unsigned char c) {
	while (! (UCSR0A & (1 << UDRE0)) ) {
 158:	5d 9b       	sbis	0x0b, 5	; 11
 15a:	fe cf       	rjmp	.-4      	; 0x158 <UART0_transmit>
	}
	UDR0 = c;
 15c:	8c b9       	out	0x0c, r24	; 12
 15e:	08 95       	ret

00000160 <UART0_put>:
}

int UART0_put( char c, FILE * out){
	UART0_transmit(c);
 160:	0e 94 ac 00 	call	0x158	; 0x158 <UART0_transmit>
	return 0;
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	08 95       	ret

0000016a <SRAM_test>:
#include <stdio.h>

#include "../drivers/SRAM_driver.h"

void SRAM_test(void)
{
 16a:	ef 92       	push	r14
 16c:	ff 92       	push	r15
 16e:	0f 93       	push	r16
 170:	1f 93       	push	r17
 172:	cf 93       	push	r28
 174:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size	= 0x800;
	uint16_t write_errors	= 0;
	uint16_t retrieval_errors	= 0;
	printf("Starting SRAM test...\n");
 176:	88 e1       	ldi	r24, 0x18	; 24
 178:	91 e0       	ldi	r25, 0x01	; 1
 17a:	0e 94 df 01 	call	0x3be	; 0x3be <puts>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this	function)
	uint16_t seed = rand();
 17e:	0e 94 70 01 	call	0x2e0	; 0x2e0 <rand>
 182:	7c 01       	movw	r14, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
 184:	0e 94 75 01 	call	0x2ea	; 0x2ea <srand>
 188:	c0 e0       	ldi	r28, 0x00	; 0
 18a:	d8 e1       	ldi	r29, 0x18	; 24

void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size	= 0x800;
	uint16_t write_errors	= 0;
 18c:	00 e0       	ldi	r16, 0x00	; 0
 18e:	10 e0       	ldi	r17, 0x00	; 0
	// yield different seeds each time (unless srand() is called before this	function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
 190:	0e 94 70 01 	call	0x2e0	; 0x2e0 <rand>
		ext_ram[i] = some_value;
 194:	88 83       	st	Y, r24
		uint8_t retreived_value = ext_ram[i];
 196:	98 81       	ld	r25, Y
		if (retreived_value != some_value) {
 198:	98 17       	cp	r25, r24
 19a:	11 f0       	breq	.+4      	; 0x1a0 <SRAM_test+0x36>
			//printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,	retreived_value, some_value);
			write_errors++;
 19c:	0f 5f       	subi	r16, 0xFF	; 255
 19e:	1f 4f       	sbci	r17, 0xFF	; 255
 1a0:	21 96       	adiw	r28, 0x01	; 1
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this	function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 1a2:	c1 15       	cp	r28, r1
 1a4:	80 e2       	ldi	r24, 0x20	; 32
 1a6:	d8 07       	cpc	r29, r24
 1a8:	99 f7       	brne	.-26     	; 0x190 <SRAM_test+0x26>
			//printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,	retreived_value, some_value);
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write	phase
	srand(seed);
 1aa:	c7 01       	movw	r24, r14
 1ac:	0e 94 75 01 	call	0x2ea	; 0x2ea <srand>
 1b0:	c0 e0       	ldi	r28, 0x00	; 0
 1b2:	d8 e1       	ldi	r29, 0x18	; 24
void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size	= 0x800;
	uint16_t write_errors	= 0;
	uint16_t retrieval_errors	= 0;
 1b4:	e1 2c       	mov	r14, r1
 1b6:	f1 2c       	mov	r15, r1
	}
	// Retrieval phase: Check that no values were changed during or after the write	phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
 1b8:	0e 94 70 01 	call	0x2e0	; 0x2e0 <rand>
		uint8_t retreived_value = ext_ram[i];
 1bc:	98 81       	ld	r25, Y
		if (retreived_value != some_value) {
 1be:	98 17       	cp	r25, r24
 1c0:	19 f0       	breq	.+6      	; 0x1c8 <SRAM_test+0x5e>
			//printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n",	i, retreived_value, some_value);
			retrieval_errors++;
 1c2:	8f ef       	ldi	r24, 0xFF	; 255
 1c4:	e8 1a       	sub	r14, r24
 1c6:	f8 0a       	sbc	r15, r24
 1c8:	21 96       	adiw	r28, 0x01	; 1
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write	phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 1ca:	c1 15       	cp	r28, r1
 1cc:	80 e2       	ldi	r24, 0x20	; 32
 1ce:	d8 07       	cpc	r29, r24
 1d0:	99 f7       	brne	.-26     	; 0x1b8 <SRAM_test+0x4e>
		if (retreived_value != some_value) {
			//printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n",	i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with\n%4d errors in write phase and\n%4d errors	in retrieval phase\n\n", write_errors, retrieval_errors);
 1d2:	ff 92       	push	r15
 1d4:	ef 92       	push	r14
 1d6:	1f 93       	push	r17
 1d8:	0f 93       	push	r16
 1da:	8e e2       	ldi	r24, 0x2E	; 46
 1dc:	91 e0       	ldi	r25, 0x01	; 1
 1de:	9f 93       	push	r25
 1e0:	8f 93       	push	r24
 1e2:	0e 94 cb 01 	call	0x396	; 0x396 <printf>
 1e6:	0f 90       	pop	r0
 1e8:	0f 90       	pop	r0
 1ea:	0f 90       	pop	r0
 1ec:	0f 90       	pop	r0
 1ee:	0f 90       	pop	r0
 1f0:	0f 90       	pop	r0
 1f2:	df 91       	pop	r29
 1f4:	cf 91       	pop	r28
 1f6:	1f 91       	pop	r17
 1f8:	0f 91       	pop	r16
 1fa:	ff 90       	pop	r15
 1fc:	ef 90       	pop	r14
 1fe:	08 95       	ret

00000200 <__udivmodsi4>:
 200:	a1 e2       	ldi	r26, 0x21	; 33
 202:	1a 2e       	mov	r1, r26
 204:	aa 1b       	sub	r26, r26
 206:	bb 1b       	sub	r27, r27
 208:	fd 01       	movw	r30, r26
 20a:	0d c0       	rjmp	.+26     	; 0x226 <__udivmodsi4_ep>

0000020c <__udivmodsi4_loop>:
 20c:	aa 1f       	adc	r26, r26
 20e:	bb 1f       	adc	r27, r27
 210:	ee 1f       	adc	r30, r30
 212:	ff 1f       	adc	r31, r31
 214:	a2 17       	cp	r26, r18
 216:	b3 07       	cpc	r27, r19
 218:	e4 07       	cpc	r30, r20
 21a:	f5 07       	cpc	r31, r21
 21c:	20 f0       	brcs	.+8      	; 0x226 <__udivmodsi4_ep>
 21e:	a2 1b       	sub	r26, r18
 220:	b3 0b       	sbc	r27, r19
 222:	e4 0b       	sbc	r30, r20
 224:	f5 0b       	sbc	r31, r21

00000226 <__udivmodsi4_ep>:
 226:	66 1f       	adc	r22, r22
 228:	77 1f       	adc	r23, r23
 22a:	88 1f       	adc	r24, r24
 22c:	99 1f       	adc	r25, r25
 22e:	1a 94       	dec	r1
 230:	69 f7       	brne	.-38     	; 0x20c <__udivmodsi4_loop>
 232:	60 95       	com	r22
 234:	70 95       	com	r23
 236:	80 95       	com	r24
 238:	90 95       	com	r25
 23a:	9b 01       	movw	r18, r22
 23c:	ac 01       	movw	r20, r24
 23e:	bd 01       	movw	r22, r26
 240:	cf 01       	movw	r24, r30
 242:	08 95       	ret

00000244 <do_rand>:
 244:	8f 92       	push	r8
 246:	9f 92       	push	r9
 248:	af 92       	push	r10
 24a:	bf 92       	push	r11
 24c:	cf 92       	push	r12
 24e:	df 92       	push	r13
 250:	ef 92       	push	r14
 252:	ff 92       	push	r15
 254:	cf 93       	push	r28
 256:	df 93       	push	r29
 258:	ec 01       	movw	r28, r24
 25a:	68 81       	ld	r22, Y
 25c:	79 81       	ldd	r23, Y+1	; 0x01
 25e:	8a 81       	ldd	r24, Y+2	; 0x02
 260:	9b 81       	ldd	r25, Y+3	; 0x03
 262:	61 15       	cp	r22, r1
 264:	71 05       	cpc	r23, r1
 266:	81 05       	cpc	r24, r1
 268:	91 05       	cpc	r25, r1
 26a:	21 f4       	brne	.+8      	; 0x274 <do_rand+0x30>
 26c:	64 e2       	ldi	r22, 0x24	; 36
 26e:	79 ed       	ldi	r23, 0xD9	; 217
 270:	8b e5       	ldi	r24, 0x5B	; 91
 272:	97 e0       	ldi	r25, 0x07	; 7
 274:	2d e1       	ldi	r18, 0x1D	; 29
 276:	33 ef       	ldi	r19, 0xF3	; 243
 278:	41 e0       	ldi	r20, 0x01	; 1
 27a:	50 e0       	ldi	r21, 0x00	; 0
 27c:	0e 94 ce 05 	call	0xb9c	; 0xb9c <__divmodsi4>
 280:	49 01       	movw	r8, r18
 282:	5a 01       	movw	r10, r20
 284:	9b 01       	movw	r18, r22
 286:	ac 01       	movw	r20, r24
 288:	a7 ea       	ldi	r26, 0xA7	; 167
 28a:	b1 e4       	ldi	r27, 0x41	; 65
 28c:	0e 94 ed 05 	call	0xbda	; 0xbda <__muluhisi3>
 290:	6b 01       	movw	r12, r22
 292:	7c 01       	movw	r14, r24
 294:	ac ee       	ldi	r26, 0xEC	; 236
 296:	b4 ef       	ldi	r27, 0xF4	; 244
 298:	a5 01       	movw	r20, r10
 29a:	94 01       	movw	r18, r8
 29c:	0e 94 fb 05 	call	0xbf6	; 0xbf6 <__mulohisi3>
 2a0:	c6 0e       	add	r12, r22
 2a2:	d7 1e       	adc	r13, r23
 2a4:	e8 1e       	adc	r14, r24
 2a6:	f9 1e       	adc	r15, r25
 2a8:	f7 fe       	sbrs	r15, 7
 2aa:	06 c0       	rjmp	.+12     	; 0x2b8 <do_rand+0x74>
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	c8 1a       	sub	r12, r24
 2b0:	d1 08       	sbc	r13, r1
 2b2:	e1 08       	sbc	r14, r1
 2b4:	80 e8       	ldi	r24, 0x80	; 128
 2b6:	f8 0a       	sbc	r15, r24
 2b8:	c8 82       	st	Y, r12
 2ba:	d9 82       	std	Y+1, r13	; 0x01
 2bc:	ea 82       	std	Y+2, r14	; 0x02
 2be:	fb 82       	std	Y+3, r15	; 0x03
 2c0:	c6 01       	movw	r24, r12
 2c2:	9f 77       	andi	r25, 0x7F	; 127
 2c4:	df 91       	pop	r29
 2c6:	cf 91       	pop	r28
 2c8:	ff 90       	pop	r15
 2ca:	ef 90       	pop	r14
 2cc:	df 90       	pop	r13
 2ce:	cf 90       	pop	r12
 2d0:	bf 90       	pop	r11
 2d2:	af 90       	pop	r10
 2d4:	9f 90       	pop	r9
 2d6:	8f 90       	pop	r8
 2d8:	08 95       	ret

000002da <rand_r>:
 2da:	0e 94 22 01 	call	0x244	; 0x244 <do_rand>
 2de:	08 95       	ret

000002e0 <rand>:
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	91 e0       	ldi	r25, 0x01	; 1
 2e4:	0e 94 22 01 	call	0x244	; 0x244 <do_rand>
 2e8:	08 95       	ret

000002ea <srand>:
 2ea:	a0 e0       	ldi	r26, 0x00	; 0
 2ec:	b0 e0       	ldi	r27, 0x00	; 0
 2ee:	80 93 00 01 	sts	0x0100, r24
 2f2:	90 93 01 01 	sts	0x0101, r25
 2f6:	a0 93 02 01 	sts	0x0102, r26
 2fa:	b0 93 03 01 	sts	0x0103, r27
 2fe:	08 95       	ret

00000300 <fdevopen>:
 300:	0f 93       	push	r16
 302:	1f 93       	push	r17
 304:	cf 93       	push	r28
 306:	df 93       	push	r29
 308:	ec 01       	movw	r28, r24
 30a:	8b 01       	movw	r16, r22
 30c:	00 97       	sbiw	r24, 0x00	; 0
 30e:	31 f4       	brne	.+12     	; 0x31c <fdevopen+0x1c>
 310:	61 15       	cp	r22, r1
 312:	71 05       	cpc	r23, r1
 314:	19 f4       	brne	.+6      	; 0x31c <fdevopen+0x1c>
 316:	80 e0       	ldi	r24, 0x00	; 0
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	38 c0       	rjmp	.+112    	; 0x38c <fdevopen+0x8c>
 31c:	6e e0       	ldi	r22, 0x0E	; 14
 31e:	70 e0       	ldi	r23, 0x00	; 0
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	0e 94 de 03 	call	0x7bc	; 0x7bc <calloc>
 328:	fc 01       	movw	r30, r24
 32a:	00 97       	sbiw	r24, 0x00	; 0
 32c:	a1 f3       	breq	.-24     	; 0x316 <fdevopen+0x16>
 32e:	80 e8       	ldi	r24, 0x80	; 128
 330:	83 83       	std	Z+3, r24	; 0x03
 332:	01 15       	cp	r16, r1
 334:	11 05       	cpc	r17, r1
 336:	71 f0       	breq	.+28     	; 0x354 <fdevopen+0x54>
 338:	13 87       	std	Z+11, r17	; 0x0b
 33a:	02 87       	std	Z+10, r16	; 0x0a
 33c:	81 e8       	ldi	r24, 0x81	; 129
 33e:	83 83       	std	Z+3, r24	; 0x03
 340:	80 91 86 01 	lds	r24, 0x0186
 344:	90 91 87 01 	lds	r25, 0x0187
 348:	89 2b       	or	r24, r25
 34a:	21 f4       	brne	.+8      	; 0x354 <fdevopen+0x54>
 34c:	f0 93 87 01 	sts	0x0187, r31
 350:	e0 93 86 01 	sts	0x0186, r30
 354:	20 97       	sbiw	r28, 0x00	; 0
 356:	c9 f0       	breq	.+50     	; 0x38a <fdevopen+0x8a>
 358:	d1 87       	std	Z+9, r29	; 0x09
 35a:	c0 87       	std	Z+8, r28	; 0x08
 35c:	83 81       	ldd	r24, Z+3	; 0x03
 35e:	82 60       	ori	r24, 0x02	; 2
 360:	83 83       	std	Z+3, r24	; 0x03
 362:	80 91 88 01 	lds	r24, 0x0188
 366:	90 91 89 01 	lds	r25, 0x0189
 36a:	89 2b       	or	r24, r25
 36c:	71 f4       	brne	.+28     	; 0x38a <fdevopen+0x8a>
 36e:	f0 93 89 01 	sts	0x0189, r31
 372:	e0 93 88 01 	sts	0x0188, r30
 376:	80 91 8a 01 	lds	r24, 0x018A
 37a:	90 91 8b 01 	lds	r25, 0x018B
 37e:	89 2b       	or	r24, r25
 380:	21 f4       	brne	.+8      	; 0x38a <fdevopen+0x8a>
 382:	f0 93 8b 01 	sts	0x018B, r31
 386:	e0 93 8a 01 	sts	0x018A, r30
 38a:	cf 01       	movw	r24, r30
 38c:	df 91       	pop	r29
 38e:	cf 91       	pop	r28
 390:	1f 91       	pop	r17
 392:	0f 91       	pop	r16
 394:	08 95       	ret

00000396 <printf>:
 396:	a0 e0       	ldi	r26, 0x00	; 0
 398:	b0 e0       	ldi	r27, 0x00	; 0
 39a:	e1 ed       	ldi	r30, 0xD1	; 209
 39c:	f1 e0       	ldi	r31, 0x01	; 1
 39e:	0c 94 10 06 	jmp	0xc20	; 0xc20 <__prologue_saves__+0x20>
 3a2:	fe 01       	movw	r30, r28
 3a4:	35 96       	adiw	r30, 0x05	; 5
 3a6:	61 91       	ld	r22, Z+
 3a8:	71 91       	ld	r23, Z+
 3aa:	af 01       	movw	r20, r30
 3ac:	80 91 88 01 	lds	r24, 0x0188
 3b0:	90 91 89 01 	lds	r25, 0x0189
 3b4:	0e 94 0c 02 	call	0x418	; 0x418 <vfprintf>
 3b8:	e2 e0       	ldi	r30, 0x02	; 2
 3ba:	0c 94 2c 06 	jmp	0xc58	; 0xc58 <__epilogue_restores__+0x20>

000003be <puts>:
 3be:	0f 93       	push	r16
 3c0:	1f 93       	push	r17
 3c2:	cf 93       	push	r28
 3c4:	df 93       	push	r29
 3c6:	e0 91 88 01 	lds	r30, 0x0188
 3ca:	f0 91 89 01 	lds	r31, 0x0189
 3ce:	23 81       	ldd	r18, Z+3	; 0x03
 3d0:	21 ff       	sbrs	r18, 1
 3d2:	1b c0       	rjmp	.+54     	; 0x40a <puts+0x4c>
 3d4:	ec 01       	movw	r28, r24
 3d6:	00 e0       	ldi	r16, 0x00	; 0
 3d8:	10 e0       	ldi	r17, 0x00	; 0
 3da:	89 91       	ld	r24, Y+
 3dc:	60 91 88 01 	lds	r22, 0x0188
 3e0:	70 91 89 01 	lds	r23, 0x0189
 3e4:	db 01       	movw	r26, r22
 3e6:	18 96       	adiw	r26, 0x08	; 8
 3e8:	ed 91       	ld	r30, X+
 3ea:	fc 91       	ld	r31, X
 3ec:	19 97       	sbiw	r26, 0x09	; 9
 3ee:	88 23       	and	r24, r24
 3f0:	31 f0       	breq	.+12     	; 0x3fe <puts+0x40>
 3f2:	09 95       	icall
 3f4:	89 2b       	or	r24, r25
 3f6:	89 f3       	breq	.-30     	; 0x3da <puts+0x1c>
 3f8:	0f ef       	ldi	r16, 0xFF	; 255
 3fa:	1f ef       	ldi	r17, 0xFF	; 255
 3fc:	ee cf       	rjmp	.-36     	; 0x3da <puts+0x1c>
 3fe:	8a e0       	ldi	r24, 0x0A	; 10
 400:	09 95       	icall
 402:	89 2b       	or	r24, r25
 404:	11 f4       	brne	.+4      	; 0x40a <puts+0x4c>
 406:	c8 01       	movw	r24, r16
 408:	02 c0       	rjmp	.+4      	; 0x40e <puts+0x50>
 40a:	8f ef       	ldi	r24, 0xFF	; 255
 40c:	9f ef       	ldi	r25, 0xFF	; 255
 40e:	df 91       	pop	r29
 410:	cf 91       	pop	r28
 412:	1f 91       	pop	r17
 414:	0f 91       	pop	r16
 416:	08 95       	ret

00000418 <vfprintf>:
 418:	ac e0       	ldi	r26, 0x0C	; 12
 41a:	b0 e0       	ldi	r27, 0x00	; 0
 41c:	e2 e1       	ldi	r30, 0x12	; 18
 41e:	f2 e0       	ldi	r31, 0x02	; 2
 420:	0c 94 00 06 	jmp	0xc00	; 0xc00 <__prologue_saves__>
 424:	7c 01       	movw	r14, r24
 426:	6b 01       	movw	r12, r22
 428:	8a 01       	movw	r16, r20
 42a:	fc 01       	movw	r30, r24
 42c:	17 82       	std	Z+7, r1	; 0x07
 42e:	16 82       	std	Z+6, r1	; 0x06
 430:	83 81       	ldd	r24, Z+3	; 0x03
 432:	81 ff       	sbrs	r24, 1
 434:	bd c1       	rjmp	.+890    	; 0x7b0 <__stack+0x2b1>
 436:	ce 01       	movw	r24, r28
 438:	01 96       	adiw	r24, 0x01	; 1
 43a:	4c 01       	movw	r8, r24
 43c:	f7 01       	movw	r30, r14
 43e:	93 81       	ldd	r25, Z+3	; 0x03
 440:	f6 01       	movw	r30, r12
 442:	93 fd       	sbrc	r25, 3
 444:	85 91       	lpm	r24, Z+
 446:	93 ff       	sbrs	r25, 3
 448:	81 91       	ld	r24, Z+
 44a:	6f 01       	movw	r12, r30
 44c:	88 23       	and	r24, r24
 44e:	09 f4       	brne	.+2      	; 0x452 <vfprintf+0x3a>
 450:	ab c1       	rjmp	.+854    	; 0x7a8 <__stack+0x2a9>
 452:	85 32       	cpi	r24, 0x25	; 37
 454:	39 f4       	brne	.+14     	; 0x464 <vfprintf+0x4c>
 456:	93 fd       	sbrc	r25, 3
 458:	85 91       	lpm	r24, Z+
 45a:	93 ff       	sbrs	r25, 3
 45c:	81 91       	ld	r24, Z+
 45e:	6f 01       	movw	r12, r30
 460:	85 32       	cpi	r24, 0x25	; 37
 462:	29 f4       	brne	.+10     	; 0x46e <vfprintf+0x56>
 464:	b7 01       	movw	r22, r14
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	0e 94 3e 05 	call	0xa7c	; 0xa7c <fputc>
 46c:	e7 cf       	rjmp	.-50     	; 0x43c <vfprintf+0x24>
 46e:	51 2c       	mov	r5, r1
 470:	31 2c       	mov	r3, r1
 472:	20 e0       	ldi	r18, 0x00	; 0
 474:	20 32       	cpi	r18, 0x20	; 32
 476:	a0 f4       	brcc	.+40     	; 0x4a0 <vfprintf+0x88>
 478:	8b 32       	cpi	r24, 0x2B	; 43
 47a:	69 f0       	breq	.+26     	; 0x496 <vfprintf+0x7e>
 47c:	30 f4       	brcc	.+12     	; 0x48a <vfprintf+0x72>
 47e:	80 32       	cpi	r24, 0x20	; 32
 480:	59 f0       	breq	.+22     	; 0x498 <vfprintf+0x80>
 482:	83 32       	cpi	r24, 0x23	; 35
 484:	69 f4       	brne	.+26     	; 0x4a0 <vfprintf+0x88>
 486:	20 61       	ori	r18, 0x10	; 16
 488:	2c c0       	rjmp	.+88     	; 0x4e2 <vfprintf+0xca>
 48a:	8d 32       	cpi	r24, 0x2D	; 45
 48c:	39 f0       	breq	.+14     	; 0x49c <vfprintf+0x84>
 48e:	80 33       	cpi	r24, 0x30	; 48
 490:	39 f4       	brne	.+14     	; 0x4a0 <vfprintf+0x88>
 492:	21 60       	ori	r18, 0x01	; 1
 494:	26 c0       	rjmp	.+76     	; 0x4e2 <vfprintf+0xca>
 496:	22 60       	ori	r18, 0x02	; 2
 498:	24 60       	ori	r18, 0x04	; 4
 49a:	23 c0       	rjmp	.+70     	; 0x4e2 <vfprintf+0xca>
 49c:	28 60       	ori	r18, 0x08	; 8
 49e:	21 c0       	rjmp	.+66     	; 0x4e2 <vfprintf+0xca>
 4a0:	27 fd       	sbrc	r18, 7
 4a2:	27 c0       	rjmp	.+78     	; 0x4f2 <vfprintf+0xda>
 4a4:	30 ed       	ldi	r19, 0xD0	; 208
 4a6:	38 0f       	add	r19, r24
 4a8:	3a 30       	cpi	r19, 0x0A	; 10
 4aa:	78 f4       	brcc	.+30     	; 0x4ca <vfprintf+0xb2>
 4ac:	26 ff       	sbrs	r18, 6
 4ae:	06 c0       	rjmp	.+12     	; 0x4bc <vfprintf+0xa4>
 4b0:	fa e0       	ldi	r31, 0x0A	; 10
 4b2:	5f 9e       	mul	r5, r31
 4b4:	30 0d       	add	r19, r0
 4b6:	11 24       	eor	r1, r1
 4b8:	53 2e       	mov	r5, r19
 4ba:	13 c0       	rjmp	.+38     	; 0x4e2 <vfprintf+0xca>
 4bc:	8a e0       	ldi	r24, 0x0A	; 10
 4be:	38 9e       	mul	r3, r24
 4c0:	30 0d       	add	r19, r0
 4c2:	11 24       	eor	r1, r1
 4c4:	33 2e       	mov	r3, r19
 4c6:	20 62       	ori	r18, 0x20	; 32
 4c8:	0c c0       	rjmp	.+24     	; 0x4e2 <vfprintf+0xca>
 4ca:	8e 32       	cpi	r24, 0x2E	; 46
 4cc:	21 f4       	brne	.+8      	; 0x4d6 <vfprintf+0xbe>
 4ce:	26 fd       	sbrc	r18, 6
 4d0:	6b c1       	rjmp	.+726    	; 0x7a8 <__stack+0x2a9>
 4d2:	20 64       	ori	r18, 0x40	; 64
 4d4:	06 c0       	rjmp	.+12     	; 0x4e2 <vfprintf+0xca>
 4d6:	8c 36       	cpi	r24, 0x6C	; 108
 4d8:	11 f4       	brne	.+4      	; 0x4de <vfprintf+0xc6>
 4da:	20 68       	ori	r18, 0x80	; 128
 4dc:	02 c0       	rjmp	.+4      	; 0x4e2 <vfprintf+0xca>
 4de:	88 36       	cpi	r24, 0x68	; 104
 4e0:	41 f4       	brne	.+16     	; 0x4f2 <vfprintf+0xda>
 4e2:	f6 01       	movw	r30, r12
 4e4:	93 fd       	sbrc	r25, 3
 4e6:	85 91       	lpm	r24, Z+
 4e8:	93 ff       	sbrs	r25, 3
 4ea:	81 91       	ld	r24, Z+
 4ec:	6f 01       	movw	r12, r30
 4ee:	81 11       	cpse	r24, r1
 4f0:	c1 cf       	rjmp	.-126    	; 0x474 <vfprintf+0x5c>
 4f2:	98 2f       	mov	r25, r24
 4f4:	9f 7d       	andi	r25, 0xDF	; 223
 4f6:	95 54       	subi	r25, 0x45	; 69
 4f8:	93 30       	cpi	r25, 0x03	; 3
 4fa:	28 f4       	brcc	.+10     	; 0x506 <__stack+0x7>
 4fc:	0c 5f       	subi	r16, 0xFC	; 252
 4fe:	1f 4f       	sbci	r17, 0xFF	; 255
 500:	ff e3       	ldi	r31, 0x3F	; 63
 502:	f9 83       	std	Y+1, r31	; 0x01
 504:	0d c0       	rjmp	.+26     	; 0x520 <__stack+0x21>
 506:	83 36       	cpi	r24, 0x63	; 99
 508:	31 f0       	breq	.+12     	; 0x516 <__stack+0x17>
 50a:	83 37       	cpi	r24, 0x73	; 115
 50c:	71 f0       	breq	.+28     	; 0x52a <__stack+0x2b>
 50e:	83 35       	cpi	r24, 0x53	; 83
 510:	09 f0       	breq	.+2      	; 0x514 <__stack+0x15>
 512:	5b c0       	rjmp	.+182    	; 0x5ca <__stack+0xcb>
 514:	22 c0       	rjmp	.+68     	; 0x55a <__stack+0x5b>
 516:	f8 01       	movw	r30, r16
 518:	80 81       	ld	r24, Z
 51a:	89 83       	std	Y+1, r24	; 0x01
 51c:	0e 5f       	subi	r16, 0xFE	; 254
 51e:	1f 4f       	sbci	r17, 0xFF	; 255
 520:	44 24       	eor	r4, r4
 522:	43 94       	inc	r4
 524:	51 2c       	mov	r5, r1
 526:	54 01       	movw	r10, r8
 528:	15 c0       	rjmp	.+42     	; 0x554 <__stack+0x55>
 52a:	38 01       	movw	r6, r16
 52c:	f2 e0       	ldi	r31, 0x02	; 2
 52e:	6f 0e       	add	r6, r31
 530:	71 1c       	adc	r7, r1
 532:	f8 01       	movw	r30, r16
 534:	a0 80       	ld	r10, Z
 536:	b1 80       	ldd	r11, Z+1	; 0x01
 538:	26 ff       	sbrs	r18, 6
 53a:	03 c0       	rjmp	.+6      	; 0x542 <__stack+0x43>
 53c:	65 2d       	mov	r22, r5
 53e:	70 e0       	ldi	r23, 0x00	; 0
 540:	02 c0       	rjmp	.+4      	; 0x546 <__stack+0x47>
 542:	6f ef       	ldi	r22, 0xFF	; 255
 544:	7f ef       	ldi	r23, 0xFF	; 255
 546:	c5 01       	movw	r24, r10
 548:	2c 87       	std	Y+12, r18	; 0x0c
 54a:	0e 94 33 05 	call	0xa66	; 0xa66 <strnlen>
 54e:	2c 01       	movw	r4, r24
 550:	83 01       	movw	r16, r6
 552:	2c 85       	ldd	r18, Y+12	; 0x0c
 554:	2f 77       	andi	r18, 0x7F	; 127
 556:	22 2e       	mov	r2, r18
 558:	17 c0       	rjmp	.+46     	; 0x588 <__stack+0x89>
 55a:	38 01       	movw	r6, r16
 55c:	f2 e0       	ldi	r31, 0x02	; 2
 55e:	6f 0e       	add	r6, r31
 560:	71 1c       	adc	r7, r1
 562:	f8 01       	movw	r30, r16
 564:	a0 80       	ld	r10, Z
 566:	b1 80       	ldd	r11, Z+1	; 0x01
 568:	26 ff       	sbrs	r18, 6
 56a:	03 c0       	rjmp	.+6      	; 0x572 <__stack+0x73>
 56c:	65 2d       	mov	r22, r5
 56e:	70 e0       	ldi	r23, 0x00	; 0
 570:	02 c0       	rjmp	.+4      	; 0x576 <__stack+0x77>
 572:	6f ef       	ldi	r22, 0xFF	; 255
 574:	7f ef       	ldi	r23, 0xFF	; 255
 576:	c5 01       	movw	r24, r10
 578:	2c 87       	std	Y+12, r18	; 0x0c
 57a:	0e 94 21 05 	call	0xa42	; 0xa42 <strnlen_P>
 57e:	2c 01       	movw	r4, r24
 580:	2c 85       	ldd	r18, Y+12	; 0x0c
 582:	20 68       	ori	r18, 0x80	; 128
 584:	22 2e       	mov	r2, r18
 586:	83 01       	movw	r16, r6
 588:	23 fc       	sbrc	r2, 3
 58a:	1b c0       	rjmp	.+54     	; 0x5c2 <__stack+0xc3>
 58c:	83 2d       	mov	r24, r3
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	48 16       	cp	r4, r24
 592:	59 06       	cpc	r5, r25
 594:	b0 f4       	brcc	.+44     	; 0x5c2 <__stack+0xc3>
 596:	b7 01       	movw	r22, r14
 598:	80 e2       	ldi	r24, 0x20	; 32
 59a:	90 e0       	ldi	r25, 0x00	; 0
 59c:	0e 94 3e 05 	call	0xa7c	; 0xa7c <fputc>
 5a0:	3a 94       	dec	r3
 5a2:	f4 cf       	rjmp	.-24     	; 0x58c <__stack+0x8d>
 5a4:	f5 01       	movw	r30, r10
 5a6:	27 fc       	sbrc	r2, 7
 5a8:	85 91       	lpm	r24, Z+
 5aa:	27 fe       	sbrs	r2, 7
 5ac:	81 91       	ld	r24, Z+
 5ae:	5f 01       	movw	r10, r30
 5b0:	b7 01       	movw	r22, r14
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	0e 94 3e 05 	call	0xa7c	; 0xa7c <fputc>
 5b8:	31 10       	cpse	r3, r1
 5ba:	3a 94       	dec	r3
 5bc:	f1 e0       	ldi	r31, 0x01	; 1
 5be:	4f 1a       	sub	r4, r31
 5c0:	51 08       	sbc	r5, r1
 5c2:	41 14       	cp	r4, r1
 5c4:	51 04       	cpc	r5, r1
 5c6:	71 f7       	brne	.-36     	; 0x5a4 <__stack+0xa5>
 5c8:	e5 c0       	rjmp	.+458    	; 0x794 <__stack+0x295>
 5ca:	84 36       	cpi	r24, 0x64	; 100
 5cc:	11 f0       	breq	.+4      	; 0x5d2 <__stack+0xd3>
 5ce:	89 36       	cpi	r24, 0x69	; 105
 5d0:	39 f5       	brne	.+78     	; 0x620 <__stack+0x121>
 5d2:	f8 01       	movw	r30, r16
 5d4:	27 ff       	sbrs	r18, 7
 5d6:	07 c0       	rjmp	.+14     	; 0x5e6 <__stack+0xe7>
 5d8:	60 81       	ld	r22, Z
 5da:	71 81       	ldd	r23, Z+1	; 0x01
 5dc:	82 81       	ldd	r24, Z+2	; 0x02
 5de:	93 81       	ldd	r25, Z+3	; 0x03
 5e0:	0c 5f       	subi	r16, 0xFC	; 252
 5e2:	1f 4f       	sbci	r17, 0xFF	; 255
 5e4:	08 c0       	rjmp	.+16     	; 0x5f6 <__stack+0xf7>
 5e6:	60 81       	ld	r22, Z
 5e8:	71 81       	ldd	r23, Z+1	; 0x01
 5ea:	88 27       	eor	r24, r24
 5ec:	77 fd       	sbrc	r23, 7
 5ee:	80 95       	com	r24
 5f0:	98 2f       	mov	r25, r24
 5f2:	0e 5f       	subi	r16, 0xFE	; 254
 5f4:	1f 4f       	sbci	r17, 0xFF	; 255
 5f6:	2f 76       	andi	r18, 0x6F	; 111
 5f8:	b2 2e       	mov	r11, r18
 5fa:	97 ff       	sbrs	r25, 7
 5fc:	09 c0       	rjmp	.+18     	; 0x610 <__stack+0x111>
 5fe:	90 95       	com	r25
 600:	80 95       	com	r24
 602:	70 95       	com	r23
 604:	61 95       	neg	r22
 606:	7f 4f       	sbci	r23, 0xFF	; 255
 608:	8f 4f       	sbci	r24, 0xFF	; 255
 60a:	9f 4f       	sbci	r25, 0xFF	; 255
 60c:	20 68       	ori	r18, 0x80	; 128
 60e:	b2 2e       	mov	r11, r18
 610:	2a e0       	ldi	r18, 0x0A	; 10
 612:	30 e0       	ldi	r19, 0x00	; 0
 614:	a4 01       	movw	r20, r8
 616:	0e 94 70 05 	call	0xae0	; 0xae0 <__ultoa_invert>
 61a:	a8 2e       	mov	r10, r24
 61c:	a8 18       	sub	r10, r8
 61e:	44 c0       	rjmp	.+136    	; 0x6a8 <__stack+0x1a9>
 620:	85 37       	cpi	r24, 0x75	; 117
 622:	29 f4       	brne	.+10     	; 0x62e <__stack+0x12f>
 624:	2f 7e       	andi	r18, 0xEF	; 239
 626:	b2 2e       	mov	r11, r18
 628:	2a e0       	ldi	r18, 0x0A	; 10
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	25 c0       	rjmp	.+74     	; 0x678 <__stack+0x179>
 62e:	f2 2f       	mov	r31, r18
 630:	f9 7f       	andi	r31, 0xF9	; 249
 632:	bf 2e       	mov	r11, r31
 634:	8f 36       	cpi	r24, 0x6F	; 111
 636:	c1 f0       	breq	.+48     	; 0x668 <__stack+0x169>
 638:	18 f4       	brcc	.+6      	; 0x640 <__stack+0x141>
 63a:	88 35       	cpi	r24, 0x58	; 88
 63c:	79 f0       	breq	.+30     	; 0x65c <__stack+0x15d>
 63e:	b4 c0       	rjmp	.+360    	; 0x7a8 <__stack+0x2a9>
 640:	80 37       	cpi	r24, 0x70	; 112
 642:	19 f0       	breq	.+6      	; 0x64a <__stack+0x14b>
 644:	88 37       	cpi	r24, 0x78	; 120
 646:	21 f0       	breq	.+8      	; 0x650 <__stack+0x151>
 648:	af c0       	rjmp	.+350    	; 0x7a8 <__stack+0x2a9>
 64a:	2f 2f       	mov	r18, r31
 64c:	20 61       	ori	r18, 0x10	; 16
 64e:	b2 2e       	mov	r11, r18
 650:	b4 fe       	sbrs	r11, 4
 652:	0d c0       	rjmp	.+26     	; 0x66e <__stack+0x16f>
 654:	8b 2d       	mov	r24, r11
 656:	84 60       	ori	r24, 0x04	; 4
 658:	b8 2e       	mov	r11, r24
 65a:	09 c0       	rjmp	.+18     	; 0x66e <__stack+0x16f>
 65c:	24 ff       	sbrs	r18, 4
 65e:	0a c0       	rjmp	.+20     	; 0x674 <__stack+0x175>
 660:	9f 2f       	mov	r25, r31
 662:	96 60       	ori	r25, 0x06	; 6
 664:	b9 2e       	mov	r11, r25
 666:	06 c0       	rjmp	.+12     	; 0x674 <__stack+0x175>
 668:	28 e0       	ldi	r18, 0x08	; 8
 66a:	30 e0       	ldi	r19, 0x00	; 0
 66c:	05 c0       	rjmp	.+10     	; 0x678 <__stack+0x179>
 66e:	20 e1       	ldi	r18, 0x10	; 16
 670:	30 e0       	ldi	r19, 0x00	; 0
 672:	02 c0       	rjmp	.+4      	; 0x678 <__stack+0x179>
 674:	20 e1       	ldi	r18, 0x10	; 16
 676:	32 e0       	ldi	r19, 0x02	; 2
 678:	f8 01       	movw	r30, r16
 67a:	b7 fe       	sbrs	r11, 7
 67c:	07 c0       	rjmp	.+14     	; 0x68c <__stack+0x18d>
 67e:	60 81       	ld	r22, Z
 680:	71 81       	ldd	r23, Z+1	; 0x01
 682:	82 81       	ldd	r24, Z+2	; 0x02
 684:	93 81       	ldd	r25, Z+3	; 0x03
 686:	0c 5f       	subi	r16, 0xFC	; 252
 688:	1f 4f       	sbci	r17, 0xFF	; 255
 68a:	06 c0       	rjmp	.+12     	; 0x698 <__stack+0x199>
 68c:	60 81       	ld	r22, Z
 68e:	71 81       	ldd	r23, Z+1	; 0x01
 690:	80 e0       	ldi	r24, 0x00	; 0
 692:	90 e0       	ldi	r25, 0x00	; 0
 694:	0e 5f       	subi	r16, 0xFE	; 254
 696:	1f 4f       	sbci	r17, 0xFF	; 255
 698:	a4 01       	movw	r20, r8
 69a:	0e 94 70 05 	call	0xae0	; 0xae0 <__ultoa_invert>
 69e:	a8 2e       	mov	r10, r24
 6a0:	a8 18       	sub	r10, r8
 6a2:	fb 2d       	mov	r31, r11
 6a4:	ff 77       	andi	r31, 0x7F	; 127
 6a6:	bf 2e       	mov	r11, r31
 6a8:	b6 fe       	sbrs	r11, 6
 6aa:	0b c0       	rjmp	.+22     	; 0x6c2 <__stack+0x1c3>
 6ac:	2b 2d       	mov	r18, r11
 6ae:	2e 7f       	andi	r18, 0xFE	; 254
 6b0:	a5 14       	cp	r10, r5
 6b2:	50 f4       	brcc	.+20     	; 0x6c8 <__stack+0x1c9>
 6b4:	b4 fe       	sbrs	r11, 4
 6b6:	0a c0       	rjmp	.+20     	; 0x6cc <__stack+0x1cd>
 6b8:	b2 fc       	sbrc	r11, 2
 6ba:	08 c0       	rjmp	.+16     	; 0x6cc <__stack+0x1cd>
 6bc:	2b 2d       	mov	r18, r11
 6be:	2e 7e       	andi	r18, 0xEE	; 238
 6c0:	05 c0       	rjmp	.+10     	; 0x6cc <__stack+0x1cd>
 6c2:	7a 2c       	mov	r7, r10
 6c4:	2b 2d       	mov	r18, r11
 6c6:	03 c0       	rjmp	.+6      	; 0x6ce <__stack+0x1cf>
 6c8:	7a 2c       	mov	r7, r10
 6ca:	01 c0       	rjmp	.+2      	; 0x6ce <__stack+0x1cf>
 6cc:	75 2c       	mov	r7, r5
 6ce:	24 ff       	sbrs	r18, 4
 6d0:	0d c0       	rjmp	.+26     	; 0x6ec <__stack+0x1ed>
 6d2:	fe 01       	movw	r30, r28
 6d4:	ea 0d       	add	r30, r10
 6d6:	f1 1d       	adc	r31, r1
 6d8:	80 81       	ld	r24, Z
 6da:	80 33       	cpi	r24, 0x30	; 48
 6dc:	11 f4       	brne	.+4      	; 0x6e2 <__stack+0x1e3>
 6de:	29 7e       	andi	r18, 0xE9	; 233
 6e0:	09 c0       	rjmp	.+18     	; 0x6f4 <__stack+0x1f5>
 6e2:	22 ff       	sbrs	r18, 2
 6e4:	06 c0       	rjmp	.+12     	; 0x6f2 <__stack+0x1f3>
 6e6:	73 94       	inc	r7
 6e8:	73 94       	inc	r7
 6ea:	04 c0       	rjmp	.+8      	; 0x6f4 <__stack+0x1f5>
 6ec:	82 2f       	mov	r24, r18
 6ee:	86 78       	andi	r24, 0x86	; 134
 6f0:	09 f0       	breq	.+2      	; 0x6f4 <__stack+0x1f5>
 6f2:	73 94       	inc	r7
 6f4:	23 fd       	sbrc	r18, 3
 6f6:	13 c0       	rjmp	.+38     	; 0x71e <__stack+0x21f>
 6f8:	20 ff       	sbrs	r18, 0
 6fa:	06 c0       	rjmp	.+12     	; 0x708 <__stack+0x209>
 6fc:	5a 2c       	mov	r5, r10
 6fe:	73 14       	cp	r7, r3
 700:	18 f4       	brcc	.+6      	; 0x708 <__stack+0x209>
 702:	53 0c       	add	r5, r3
 704:	57 18       	sub	r5, r7
 706:	73 2c       	mov	r7, r3
 708:	73 14       	cp	r7, r3
 70a:	68 f4       	brcc	.+26     	; 0x726 <__stack+0x227>
 70c:	b7 01       	movw	r22, r14
 70e:	80 e2       	ldi	r24, 0x20	; 32
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	2c 87       	std	Y+12, r18	; 0x0c
 714:	0e 94 3e 05 	call	0xa7c	; 0xa7c <fputc>
 718:	73 94       	inc	r7
 71a:	2c 85       	ldd	r18, Y+12	; 0x0c
 71c:	f5 cf       	rjmp	.-22     	; 0x708 <__stack+0x209>
 71e:	73 14       	cp	r7, r3
 720:	10 f4       	brcc	.+4      	; 0x726 <__stack+0x227>
 722:	37 18       	sub	r3, r7
 724:	01 c0       	rjmp	.+2      	; 0x728 <__stack+0x229>
 726:	31 2c       	mov	r3, r1
 728:	24 ff       	sbrs	r18, 4
 72a:	12 c0       	rjmp	.+36     	; 0x750 <__stack+0x251>
 72c:	b7 01       	movw	r22, r14
 72e:	80 e3       	ldi	r24, 0x30	; 48
 730:	90 e0       	ldi	r25, 0x00	; 0
 732:	2c 87       	std	Y+12, r18	; 0x0c
 734:	0e 94 3e 05 	call	0xa7c	; 0xa7c <fputc>
 738:	2c 85       	ldd	r18, Y+12	; 0x0c
 73a:	22 ff       	sbrs	r18, 2
 73c:	17 c0       	rjmp	.+46     	; 0x76c <__stack+0x26d>
 73e:	21 ff       	sbrs	r18, 1
 740:	03 c0       	rjmp	.+6      	; 0x748 <__stack+0x249>
 742:	88 e5       	ldi	r24, 0x58	; 88
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	02 c0       	rjmp	.+4      	; 0x74c <__stack+0x24d>
 748:	88 e7       	ldi	r24, 0x78	; 120
 74a:	90 e0       	ldi	r25, 0x00	; 0
 74c:	b7 01       	movw	r22, r14
 74e:	0c c0       	rjmp	.+24     	; 0x768 <__stack+0x269>
 750:	82 2f       	mov	r24, r18
 752:	86 78       	andi	r24, 0x86	; 134
 754:	59 f0       	breq	.+22     	; 0x76c <__stack+0x26d>
 756:	21 fd       	sbrc	r18, 1
 758:	02 c0       	rjmp	.+4      	; 0x75e <__stack+0x25f>
 75a:	80 e2       	ldi	r24, 0x20	; 32
 75c:	01 c0       	rjmp	.+2      	; 0x760 <__stack+0x261>
 75e:	8b e2       	ldi	r24, 0x2B	; 43
 760:	27 fd       	sbrc	r18, 7
 762:	8d e2       	ldi	r24, 0x2D	; 45
 764:	b7 01       	movw	r22, r14
 766:	90 e0       	ldi	r25, 0x00	; 0
 768:	0e 94 3e 05 	call	0xa7c	; 0xa7c <fputc>
 76c:	a5 14       	cp	r10, r5
 76e:	38 f4       	brcc	.+14     	; 0x77e <__stack+0x27f>
 770:	b7 01       	movw	r22, r14
 772:	80 e3       	ldi	r24, 0x30	; 48
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	0e 94 3e 05 	call	0xa7c	; 0xa7c <fputc>
 77a:	5a 94       	dec	r5
 77c:	f7 cf       	rjmp	.-18     	; 0x76c <__stack+0x26d>
 77e:	aa 94       	dec	r10
 780:	f4 01       	movw	r30, r8
 782:	ea 0d       	add	r30, r10
 784:	f1 1d       	adc	r31, r1
 786:	80 81       	ld	r24, Z
 788:	b7 01       	movw	r22, r14
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	0e 94 3e 05 	call	0xa7c	; 0xa7c <fputc>
 790:	a1 10       	cpse	r10, r1
 792:	f5 cf       	rjmp	.-22     	; 0x77e <__stack+0x27f>
 794:	33 20       	and	r3, r3
 796:	09 f4       	brne	.+2      	; 0x79a <__stack+0x29b>
 798:	51 ce       	rjmp	.-862    	; 0x43c <vfprintf+0x24>
 79a:	b7 01       	movw	r22, r14
 79c:	80 e2       	ldi	r24, 0x20	; 32
 79e:	90 e0       	ldi	r25, 0x00	; 0
 7a0:	0e 94 3e 05 	call	0xa7c	; 0xa7c <fputc>
 7a4:	3a 94       	dec	r3
 7a6:	f6 cf       	rjmp	.-20     	; 0x794 <__stack+0x295>
 7a8:	f7 01       	movw	r30, r14
 7aa:	86 81       	ldd	r24, Z+6	; 0x06
 7ac:	97 81       	ldd	r25, Z+7	; 0x07
 7ae:	02 c0       	rjmp	.+4      	; 0x7b4 <__stack+0x2b5>
 7b0:	8f ef       	ldi	r24, 0xFF	; 255
 7b2:	9f ef       	ldi	r25, 0xFF	; 255
 7b4:	2c 96       	adiw	r28, 0x0c	; 12
 7b6:	e2 e1       	ldi	r30, 0x12	; 18
 7b8:	0c 94 1c 06 	jmp	0xc38	; 0xc38 <__epilogue_restores__>

000007bc <calloc>:
 7bc:	0f 93       	push	r16
 7be:	1f 93       	push	r17
 7c0:	cf 93       	push	r28
 7c2:	df 93       	push	r29
 7c4:	86 9f       	mul	r24, r22
 7c6:	80 01       	movw	r16, r0
 7c8:	87 9f       	mul	r24, r23
 7ca:	10 0d       	add	r17, r0
 7cc:	96 9f       	mul	r25, r22
 7ce:	10 0d       	add	r17, r0
 7d0:	11 24       	eor	r1, r1
 7d2:	c8 01       	movw	r24, r16
 7d4:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <malloc>
 7d8:	ec 01       	movw	r28, r24
 7da:	00 97       	sbiw	r24, 0x00	; 0
 7dc:	29 f0       	breq	.+10     	; 0x7e8 <calloc+0x2c>
 7de:	a8 01       	movw	r20, r16
 7e0:	60 e0       	ldi	r22, 0x00	; 0
 7e2:	70 e0       	ldi	r23, 0x00	; 0
 7e4:	0e 94 2c 05 	call	0xa58	; 0xa58 <memset>
 7e8:	ce 01       	movw	r24, r28
 7ea:	df 91       	pop	r29
 7ec:	cf 91       	pop	r28
 7ee:	1f 91       	pop	r17
 7f0:	0f 91       	pop	r16
 7f2:	08 95       	ret

000007f4 <malloc>:
 7f4:	cf 93       	push	r28
 7f6:	df 93       	push	r29
 7f8:	82 30       	cpi	r24, 0x02	; 2
 7fa:	91 05       	cpc	r25, r1
 7fc:	10 f4       	brcc	.+4      	; 0x802 <malloc+0xe>
 7fe:	82 e0       	ldi	r24, 0x02	; 2
 800:	90 e0       	ldi	r25, 0x00	; 0
 802:	e0 91 8e 01 	lds	r30, 0x018E
 806:	f0 91 8f 01 	lds	r31, 0x018F
 80a:	20 e0       	ldi	r18, 0x00	; 0
 80c:	30 e0       	ldi	r19, 0x00	; 0
 80e:	a0 e0       	ldi	r26, 0x00	; 0
 810:	b0 e0       	ldi	r27, 0x00	; 0
 812:	30 97       	sbiw	r30, 0x00	; 0
 814:	39 f1       	breq	.+78     	; 0x864 <malloc+0x70>
 816:	40 81       	ld	r20, Z
 818:	51 81       	ldd	r21, Z+1	; 0x01
 81a:	48 17       	cp	r20, r24
 81c:	59 07       	cpc	r21, r25
 81e:	b8 f0       	brcs	.+46     	; 0x84e <malloc+0x5a>
 820:	48 17       	cp	r20, r24
 822:	59 07       	cpc	r21, r25
 824:	71 f4       	brne	.+28     	; 0x842 <malloc+0x4e>
 826:	82 81       	ldd	r24, Z+2	; 0x02
 828:	93 81       	ldd	r25, Z+3	; 0x03
 82a:	10 97       	sbiw	r26, 0x00	; 0
 82c:	29 f0       	breq	.+10     	; 0x838 <malloc+0x44>
 82e:	13 96       	adiw	r26, 0x03	; 3
 830:	9c 93       	st	X, r25
 832:	8e 93       	st	-X, r24
 834:	12 97       	sbiw	r26, 0x02	; 2
 836:	2c c0       	rjmp	.+88     	; 0x890 <malloc+0x9c>
 838:	90 93 8f 01 	sts	0x018F, r25
 83c:	80 93 8e 01 	sts	0x018E, r24
 840:	27 c0       	rjmp	.+78     	; 0x890 <malloc+0x9c>
 842:	21 15       	cp	r18, r1
 844:	31 05       	cpc	r19, r1
 846:	31 f0       	breq	.+12     	; 0x854 <malloc+0x60>
 848:	42 17       	cp	r20, r18
 84a:	53 07       	cpc	r21, r19
 84c:	18 f0       	brcs	.+6      	; 0x854 <malloc+0x60>
 84e:	a9 01       	movw	r20, r18
 850:	db 01       	movw	r26, r22
 852:	01 c0       	rjmp	.+2      	; 0x856 <malloc+0x62>
 854:	ef 01       	movw	r28, r30
 856:	9a 01       	movw	r18, r20
 858:	bd 01       	movw	r22, r26
 85a:	df 01       	movw	r26, r30
 85c:	02 80       	ldd	r0, Z+2	; 0x02
 85e:	f3 81       	ldd	r31, Z+3	; 0x03
 860:	e0 2d       	mov	r30, r0
 862:	d7 cf       	rjmp	.-82     	; 0x812 <malloc+0x1e>
 864:	21 15       	cp	r18, r1
 866:	31 05       	cpc	r19, r1
 868:	f9 f0       	breq	.+62     	; 0x8a8 <malloc+0xb4>
 86a:	28 1b       	sub	r18, r24
 86c:	39 0b       	sbc	r19, r25
 86e:	24 30       	cpi	r18, 0x04	; 4
 870:	31 05       	cpc	r19, r1
 872:	80 f4       	brcc	.+32     	; 0x894 <malloc+0xa0>
 874:	8a 81       	ldd	r24, Y+2	; 0x02
 876:	9b 81       	ldd	r25, Y+3	; 0x03
 878:	61 15       	cp	r22, r1
 87a:	71 05       	cpc	r23, r1
 87c:	21 f0       	breq	.+8      	; 0x886 <malloc+0x92>
 87e:	fb 01       	movw	r30, r22
 880:	93 83       	std	Z+3, r25	; 0x03
 882:	82 83       	std	Z+2, r24	; 0x02
 884:	04 c0       	rjmp	.+8      	; 0x88e <malloc+0x9a>
 886:	90 93 8f 01 	sts	0x018F, r25
 88a:	80 93 8e 01 	sts	0x018E, r24
 88e:	fe 01       	movw	r30, r28
 890:	32 96       	adiw	r30, 0x02	; 2
 892:	44 c0       	rjmp	.+136    	; 0x91c <malloc+0x128>
 894:	fe 01       	movw	r30, r28
 896:	e2 0f       	add	r30, r18
 898:	f3 1f       	adc	r31, r19
 89a:	81 93       	st	Z+, r24
 89c:	91 93       	st	Z+, r25
 89e:	22 50       	subi	r18, 0x02	; 2
 8a0:	31 09       	sbc	r19, r1
 8a2:	39 83       	std	Y+1, r19	; 0x01
 8a4:	28 83       	st	Y, r18
 8a6:	3a c0       	rjmp	.+116    	; 0x91c <malloc+0x128>
 8a8:	20 91 8c 01 	lds	r18, 0x018C
 8ac:	30 91 8d 01 	lds	r19, 0x018D
 8b0:	23 2b       	or	r18, r19
 8b2:	41 f4       	brne	.+16     	; 0x8c4 <malloc+0xd0>
 8b4:	20 91 06 01 	lds	r18, 0x0106
 8b8:	30 91 07 01 	lds	r19, 0x0107
 8bc:	30 93 8d 01 	sts	0x018D, r19
 8c0:	20 93 8c 01 	sts	0x018C, r18
 8c4:	20 91 04 01 	lds	r18, 0x0104
 8c8:	30 91 05 01 	lds	r19, 0x0105
 8cc:	21 15       	cp	r18, r1
 8ce:	31 05       	cpc	r19, r1
 8d0:	41 f4       	brne	.+16     	; 0x8e2 <malloc+0xee>
 8d2:	2d b7       	in	r18, 0x3d	; 61
 8d4:	3e b7       	in	r19, 0x3e	; 62
 8d6:	40 91 08 01 	lds	r20, 0x0108
 8da:	50 91 09 01 	lds	r21, 0x0109
 8de:	24 1b       	sub	r18, r20
 8e0:	35 0b       	sbc	r19, r21
 8e2:	e0 91 8c 01 	lds	r30, 0x018C
 8e6:	f0 91 8d 01 	lds	r31, 0x018D
 8ea:	e2 17       	cp	r30, r18
 8ec:	f3 07       	cpc	r31, r19
 8ee:	a0 f4       	brcc	.+40     	; 0x918 <malloc+0x124>
 8f0:	2e 1b       	sub	r18, r30
 8f2:	3f 0b       	sbc	r19, r31
 8f4:	28 17       	cp	r18, r24
 8f6:	39 07       	cpc	r19, r25
 8f8:	78 f0       	brcs	.+30     	; 0x918 <malloc+0x124>
 8fa:	ac 01       	movw	r20, r24
 8fc:	4e 5f       	subi	r20, 0xFE	; 254
 8fe:	5f 4f       	sbci	r21, 0xFF	; 255
 900:	24 17       	cp	r18, r20
 902:	35 07       	cpc	r19, r21
 904:	48 f0       	brcs	.+18     	; 0x918 <malloc+0x124>
 906:	4e 0f       	add	r20, r30
 908:	5f 1f       	adc	r21, r31
 90a:	50 93 8d 01 	sts	0x018D, r21
 90e:	40 93 8c 01 	sts	0x018C, r20
 912:	81 93       	st	Z+, r24
 914:	91 93       	st	Z+, r25
 916:	02 c0       	rjmp	.+4      	; 0x91c <malloc+0x128>
 918:	e0 e0       	ldi	r30, 0x00	; 0
 91a:	f0 e0       	ldi	r31, 0x00	; 0
 91c:	cf 01       	movw	r24, r30
 91e:	df 91       	pop	r29
 920:	cf 91       	pop	r28
 922:	08 95       	ret

00000924 <free>:
 924:	cf 93       	push	r28
 926:	df 93       	push	r29
 928:	00 97       	sbiw	r24, 0x00	; 0
 92a:	09 f4       	brne	.+2      	; 0x92e <free+0xa>
 92c:	87 c0       	rjmp	.+270    	; 0xa3c <free+0x118>
 92e:	fc 01       	movw	r30, r24
 930:	32 97       	sbiw	r30, 0x02	; 2
 932:	13 82       	std	Z+3, r1	; 0x03
 934:	12 82       	std	Z+2, r1	; 0x02
 936:	c0 91 8e 01 	lds	r28, 0x018E
 93a:	d0 91 8f 01 	lds	r29, 0x018F
 93e:	20 97       	sbiw	r28, 0x00	; 0
 940:	81 f4       	brne	.+32     	; 0x962 <free+0x3e>
 942:	20 81       	ld	r18, Z
 944:	31 81       	ldd	r19, Z+1	; 0x01
 946:	28 0f       	add	r18, r24
 948:	39 1f       	adc	r19, r25
 94a:	80 91 8c 01 	lds	r24, 0x018C
 94e:	90 91 8d 01 	lds	r25, 0x018D
 952:	82 17       	cp	r24, r18
 954:	93 07       	cpc	r25, r19
 956:	79 f5       	brne	.+94     	; 0x9b6 <free+0x92>
 958:	f0 93 8d 01 	sts	0x018D, r31
 95c:	e0 93 8c 01 	sts	0x018C, r30
 960:	6d c0       	rjmp	.+218    	; 0xa3c <free+0x118>
 962:	de 01       	movw	r26, r28
 964:	20 e0       	ldi	r18, 0x00	; 0
 966:	30 e0       	ldi	r19, 0x00	; 0
 968:	ae 17       	cp	r26, r30
 96a:	bf 07       	cpc	r27, r31
 96c:	50 f4       	brcc	.+20     	; 0x982 <free+0x5e>
 96e:	12 96       	adiw	r26, 0x02	; 2
 970:	4d 91       	ld	r20, X+
 972:	5c 91       	ld	r21, X
 974:	13 97       	sbiw	r26, 0x03	; 3
 976:	9d 01       	movw	r18, r26
 978:	41 15       	cp	r20, r1
 97a:	51 05       	cpc	r21, r1
 97c:	09 f1       	breq	.+66     	; 0x9c0 <free+0x9c>
 97e:	da 01       	movw	r26, r20
 980:	f3 cf       	rjmp	.-26     	; 0x968 <free+0x44>
 982:	b3 83       	std	Z+3, r27	; 0x03
 984:	a2 83       	std	Z+2, r26	; 0x02
 986:	40 81       	ld	r20, Z
 988:	51 81       	ldd	r21, Z+1	; 0x01
 98a:	84 0f       	add	r24, r20
 98c:	95 1f       	adc	r25, r21
 98e:	8a 17       	cp	r24, r26
 990:	9b 07       	cpc	r25, r27
 992:	71 f4       	brne	.+28     	; 0x9b0 <free+0x8c>
 994:	8d 91       	ld	r24, X+
 996:	9c 91       	ld	r25, X
 998:	11 97       	sbiw	r26, 0x01	; 1
 99a:	84 0f       	add	r24, r20
 99c:	95 1f       	adc	r25, r21
 99e:	02 96       	adiw	r24, 0x02	; 2
 9a0:	91 83       	std	Z+1, r25	; 0x01
 9a2:	80 83       	st	Z, r24
 9a4:	12 96       	adiw	r26, 0x02	; 2
 9a6:	8d 91       	ld	r24, X+
 9a8:	9c 91       	ld	r25, X
 9aa:	13 97       	sbiw	r26, 0x03	; 3
 9ac:	93 83       	std	Z+3, r25	; 0x03
 9ae:	82 83       	std	Z+2, r24	; 0x02
 9b0:	21 15       	cp	r18, r1
 9b2:	31 05       	cpc	r19, r1
 9b4:	29 f4       	brne	.+10     	; 0x9c0 <free+0x9c>
 9b6:	f0 93 8f 01 	sts	0x018F, r31
 9ba:	e0 93 8e 01 	sts	0x018E, r30
 9be:	3e c0       	rjmp	.+124    	; 0xa3c <free+0x118>
 9c0:	d9 01       	movw	r26, r18
 9c2:	13 96       	adiw	r26, 0x03	; 3
 9c4:	fc 93       	st	X, r31
 9c6:	ee 93       	st	-X, r30
 9c8:	12 97       	sbiw	r26, 0x02	; 2
 9ca:	4d 91       	ld	r20, X+
 9cc:	5d 91       	ld	r21, X+
 9ce:	a4 0f       	add	r26, r20
 9d0:	b5 1f       	adc	r27, r21
 9d2:	ea 17       	cp	r30, r26
 9d4:	fb 07       	cpc	r31, r27
 9d6:	79 f4       	brne	.+30     	; 0x9f6 <free+0xd2>
 9d8:	80 81       	ld	r24, Z
 9da:	91 81       	ldd	r25, Z+1	; 0x01
 9dc:	84 0f       	add	r24, r20
 9de:	95 1f       	adc	r25, r21
 9e0:	02 96       	adiw	r24, 0x02	; 2
 9e2:	d9 01       	movw	r26, r18
 9e4:	11 96       	adiw	r26, 0x01	; 1
 9e6:	9c 93       	st	X, r25
 9e8:	8e 93       	st	-X, r24
 9ea:	82 81       	ldd	r24, Z+2	; 0x02
 9ec:	93 81       	ldd	r25, Z+3	; 0x03
 9ee:	13 96       	adiw	r26, 0x03	; 3
 9f0:	9c 93       	st	X, r25
 9f2:	8e 93       	st	-X, r24
 9f4:	12 97       	sbiw	r26, 0x02	; 2
 9f6:	e0 e0       	ldi	r30, 0x00	; 0
 9f8:	f0 e0       	ldi	r31, 0x00	; 0
 9fa:	8a 81       	ldd	r24, Y+2	; 0x02
 9fc:	9b 81       	ldd	r25, Y+3	; 0x03
 9fe:	00 97       	sbiw	r24, 0x00	; 0
 a00:	19 f0       	breq	.+6      	; 0xa08 <free+0xe4>
 a02:	fe 01       	movw	r30, r28
 a04:	ec 01       	movw	r28, r24
 a06:	f9 cf       	rjmp	.-14     	; 0x9fa <free+0xd6>
 a08:	ce 01       	movw	r24, r28
 a0a:	02 96       	adiw	r24, 0x02	; 2
 a0c:	28 81       	ld	r18, Y
 a0e:	39 81       	ldd	r19, Y+1	; 0x01
 a10:	82 0f       	add	r24, r18
 a12:	93 1f       	adc	r25, r19
 a14:	20 91 8c 01 	lds	r18, 0x018C
 a18:	30 91 8d 01 	lds	r19, 0x018D
 a1c:	28 17       	cp	r18, r24
 a1e:	39 07       	cpc	r19, r25
 a20:	69 f4       	brne	.+26     	; 0xa3c <free+0x118>
 a22:	30 97       	sbiw	r30, 0x00	; 0
 a24:	29 f4       	brne	.+10     	; 0xa30 <free+0x10c>
 a26:	10 92 8f 01 	sts	0x018F, r1
 a2a:	10 92 8e 01 	sts	0x018E, r1
 a2e:	02 c0       	rjmp	.+4      	; 0xa34 <free+0x110>
 a30:	13 82       	std	Z+3, r1	; 0x03
 a32:	12 82       	std	Z+2, r1	; 0x02
 a34:	d0 93 8d 01 	sts	0x018D, r29
 a38:	c0 93 8c 01 	sts	0x018C, r28
 a3c:	df 91       	pop	r29
 a3e:	cf 91       	pop	r28
 a40:	08 95       	ret

00000a42 <strnlen_P>:
 a42:	fc 01       	movw	r30, r24
 a44:	05 90       	lpm	r0, Z+
 a46:	61 50       	subi	r22, 0x01	; 1
 a48:	70 40       	sbci	r23, 0x00	; 0
 a4a:	01 10       	cpse	r0, r1
 a4c:	d8 f7       	brcc	.-10     	; 0xa44 <strnlen_P+0x2>
 a4e:	80 95       	com	r24
 a50:	90 95       	com	r25
 a52:	8e 0f       	add	r24, r30
 a54:	9f 1f       	adc	r25, r31
 a56:	08 95       	ret

00000a58 <memset>:
 a58:	dc 01       	movw	r26, r24
 a5a:	01 c0       	rjmp	.+2      	; 0xa5e <memset+0x6>
 a5c:	6d 93       	st	X+, r22
 a5e:	41 50       	subi	r20, 0x01	; 1
 a60:	50 40       	sbci	r21, 0x00	; 0
 a62:	e0 f7       	brcc	.-8      	; 0xa5c <memset+0x4>
 a64:	08 95       	ret

00000a66 <strnlen>:
 a66:	fc 01       	movw	r30, r24
 a68:	61 50       	subi	r22, 0x01	; 1
 a6a:	70 40       	sbci	r23, 0x00	; 0
 a6c:	01 90       	ld	r0, Z+
 a6e:	01 10       	cpse	r0, r1
 a70:	d8 f7       	brcc	.-10     	; 0xa68 <strnlen+0x2>
 a72:	80 95       	com	r24
 a74:	90 95       	com	r25
 a76:	8e 0f       	add	r24, r30
 a78:	9f 1f       	adc	r25, r31
 a7a:	08 95       	ret

00000a7c <fputc>:
 a7c:	0f 93       	push	r16
 a7e:	1f 93       	push	r17
 a80:	cf 93       	push	r28
 a82:	df 93       	push	r29
 a84:	18 2f       	mov	r17, r24
 a86:	09 2f       	mov	r16, r25
 a88:	eb 01       	movw	r28, r22
 a8a:	8b 81       	ldd	r24, Y+3	; 0x03
 a8c:	81 fd       	sbrc	r24, 1
 a8e:	03 c0       	rjmp	.+6      	; 0xa96 <fputc+0x1a>
 a90:	8f ef       	ldi	r24, 0xFF	; 255
 a92:	9f ef       	ldi	r25, 0xFF	; 255
 a94:	20 c0       	rjmp	.+64     	; 0xad6 <fputc+0x5a>
 a96:	82 ff       	sbrs	r24, 2
 a98:	10 c0       	rjmp	.+32     	; 0xaba <fputc+0x3e>
 a9a:	4e 81       	ldd	r20, Y+6	; 0x06
 a9c:	5f 81       	ldd	r21, Y+7	; 0x07
 a9e:	2c 81       	ldd	r18, Y+4	; 0x04
 aa0:	3d 81       	ldd	r19, Y+5	; 0x05
 aa2:	42 17       	cp	r20, r18
 aa4:	53 07       	cpc	r21, r19
 aa6:	7c f4       	brge	.+30     	; 0xac6 <fputc+0x4a>
 aa8:	e8 81       	ld	r30, Y
 aaa:	f9 81       	ldd	r31, Y+1	; 0x01
 aac:	9f 01       	movw	r18, r30
 aae:	2f 5f       	subi	r18, 0xFF	; 255
 ab0:	3f 4f       	sbci	r19, 0xFF	; 255
 ab2:	39 83       	std	Y+1, r19	; 0x01
 ab4:	28 83       	st	Y, r18
 ab6:	10 83       	st	Z, r17
 ab8:	06 c0       	rjmp	.+12     	; 0xac6 <fputc+0x4a>
 aba:	e8 85       	ldd	r30, Y+8	; 0x08
 abc:	f9 85       	ldd	r31, Y+9	; 0x09
 abe:	81 2f       	mov	r24, r17
 ac0:	09 95       	icall
 ac2:	89 2b       	or	r24, r25
 ac4:	29 f7       	brne	.-54     	; 0xa90 <fputc+0x14>
 ac6:	2e 81       	ldd	r18, Y+6	; 0x06
 ac8:	3f 81       	ldd	r19, Y+7	; 0x07
 aca:	2f 5f       	subi	r18, 0xFF	; 255
 acc:	3f 4f       	sbci	r19, 0xFF	; 255
 ace:	3f 83       	std	Y+7, r19	; 0x07
 ad0:	2e 83       	std	Y+6, r18	; 0x06
 ad2:	81 2f       	mov	r24, r17
 ad4:	90 2f       	mov	r25, r16
 ad6:	df 91       	pop	r29
 ad8:	cf 91       	pop	r28
 ada:	1f 91       	pop	r17
 adc:	0f 91       	pop	r16
 ade:	08 95       	ret

00000ae0 <__ultoa_invert>:
 ae0:	fa 01       	movw	r30, r20
 ae2:	aa 27       	eor	r26, r26
 ae4:	28 30       	cpi	r18, 0x08	; 8
 ae6:	51 f1       	breq	.+84     	; 0xb3c <__ultoa_invert+0x5c>
 ae8:	20 31       	cpi	r18, 0x10	; 16
 aea:	81 f1       	breq	.+96     	; 0xb4c <__ultoa_invert+0x6c>
 aec:	e8 94       	clt
 aee:	6f 93       	push	r22
 af0:	6e 7f       	andi	r22, 0xFE	; 254
 af2:	6e 5f       	subi	r22, 0xFE	; 254
 af4:	7f 4f       	sbci	r23, 0xFF	; 255
 af6:	8f 4f       	sbci	r24, 0xFF	; 255
 af8:	9f 4f       	sbci	r25, 0xFF	; 255
 afa:	af 4f       	sbci	r26, 0xFF	; 255
 afc:	b1 e0       	ldi	r27, 0x01	; 1
 afe:	3e d0       	rcall	.+124    	; 0xb7c <__ultoa_invert+0x9c>
 b00:	b4 e0       	ldi	r27, 0x04	; 4
 b02:	3c d0       	rcall	.+120    	; 0xb7c <__ultoa_invert+0x9c>
 b04:	67 0f       	add	r22, r23
 b06:	78 1f       	adc	r23, r24
 b08:	89 1f       	adc	r24, r25
 b0a:	9a 1f       	adc	r25, r26
 b0c:	a1 1d       	adc	r26, r1
 b0e:	68 0f       	add	r22, r24
 b10:	79 1f       	adc	r23, r25
 b12:	8a 1f       	adc	r24, r26
 b14:	91 1d       	adc	r25, r1
 b16:	a1 1d       	adc	r26, r1
 b18:	6a 0f       	add	r22, r26
 b1a:	71 1d       	adc	r23, r1
 b1c:	81 1d       	adc	r24, r1
 b1e:	91 1d       	adc	r25, r1
 b20:	a1 1d       	adc	r26, r1
 b22:	20 d0       	rcall	.+64     	; 0xb64 <__ultoa_invert+0x84>
 b24:	09 f4       	brne	.+2      	; 0xb28 <__ultoa_invert+0x48>
 b26:	68 94       	set
 b28:	3f 91       	pop	r19
 b2a:	2a e0       	ldi	r18, 0x0A	; 10
 b2c:	26 9f       	mul	r18, r22
 b2e:	11 24       	eor	r1, r1
 b30:	30 19       	sub	r19, r0
 b32:	30 5d       	subi	r19, 0xD0	; 208
 b34:	31 93       	st	Z+, r19
 b36:	de f6       	brtc	.-74     	; 0xaee <__ultoa_invert+0xe>
 b38:	cf 01       	movw	r24, r30
 b3a:	08 95       	ret
 b3c:	46 2f       	mov	r20, r22
 b3e:	47 70       	andi	r20, 0x07	; 7
 b40:	40 5d       	subi	r20, 0xD0	; 208
 b42:	41 93       	st	Z+, r20
 b44:	b3 e0       	ldi	r27, 0x03	; 3
 b46:	0f d0       	rcall	.+30     	; 0xb66 <__ultoa_invert+0x86>
 b48:	c9 f7       	brne	.-14     	; 0xb3c <__ultoa_invert+0x5c>
 b4a:	f6 cf       	rjmp	.-20     	; 0xb38 <__ultoa_invert+0x58>
 b4c:	46 2f       	mov	r20, r22
 b4e:	4f 70       	andi	r20, 0x0F	; 15
 b50:	40 5d       	subi	r20, 0xD0	; 208
 b52:	4a 33       	cpi	r20, 0x3A	; 58
 b54:	18 f0       	brcs	.+6      	; 0xb5c <__ultoa_invert+0x7c>
 b56:	49 5d       	subi	r20, 0xD9	; 217
 b58:	31 fd       	sbrc	r19, 1
 b5a:	40 52       	subi	r20, 0x20	; 32
 b5c:	41 93       	st	Z+, r20
 b5e:	02 d0       	rcall	.+4      	; 0xb64 <__ultoa_invert+0x84>
 b60:	a9 f7       	brne	.-22     	; 0xb4c <__ultoa_invert+0x6c>
 b62:	ea cf       	rjmp	.-44     	; 0xb38 <__ultoa_invert+0x58>
 b64:	b4 e0       	ldi	r27, 0x04	; 4
 b66:	a6 95       	lsr	r26
 b68:	97 95       	ror	r25
 b6a:	87 95       	ror	r24
 b6c:	77 95       	ror	r23
 b6e:	67 95       	ror	r22
 b70:	ba 95       	dec	r27
 b72:	c9 f7       	brne	.-14     	; 0xb66 <__ultoa_invert+0x86>
 b74:	00 97       	sbiw	r24, 0x00	; 0
 b76:	61 05       	cpc	r22, r1
 b78:	71 05       	cpc	r23, r1
 b7a:	08 95       	ret
 b7c:	9b 01       	movw	r18, r22
 b7e:	ac 01       	movw	r20, r24
 b80:	0a 2e       	mov	r0, r26
 b82:	06 94       	lsr	r0
 b84:	57 95       	ror	r21
 b86:	47 95       	ror	r20
 b88:	37 95       	ror	r19
 b8a:	27 95       	ror	r18
 b8c:	ba 95       	dec	r27
 b8e:	c9 f7       	brne	.-14     	; 0xb82 <__ultoa_invert+0xa2>
 b90:	62 0f       	add	r22, r18
 b92:	73 1f       	adc	r23, r19
 b94:	84 1f       	adc	r24, r20
 b96:	95 1f       	adc	r25, r21
 b98:	a0 1d       	adc	r26, r0
 b9a:	08 95       	ret

00000b9c <__divmodsi4>:
 b9c:	05 2e       	mov	r0, r21
 b9e:	97 fb       	bst	r25, 7
 ba0:	1e f4       	brtc	.+6      	; 0xba8 <__divmodsi4+0xc>
 ba2:	00 94       	com	r0
 ba4:	0e 94 e5 05 	call	0xbca	; 0xbca <__negsi2>
 ba8:	57 fd       	sbrc	r21, 7
 baa:	07 d0       	rcall	.+14     	; 0xbba <__divmodsi4_neg2>
 bac:	0e 94 00 01 	call	0x200	; 0x200 <__udivmodsi4>
 bb0:	07 fc       	sbrc	r0, 7
 bb2:	03 d0       	rcall	.+6      	; 0xbba <__divmodsi4_neg2>
 bb4:	4e f4       	brtc	.+18     	; 0xbc8 <__divmodsi4_exit>
 bb6:	0c 94 e5 05 	jmp	0xbca	; 0xbca <__negsi2>

00000bba <__divmodsi4_neg2>:
 bba:	50 95       	com	r21
 bbc:	40 95       	com	r20
 bbe:	30 95       	com	r19
 bc0:	21 95       	neg	r18
 bc2:	3f 4f       	sbci	r19, 0xFF	; 255
 bc4:	4f 4f       	sbci	r20, 0xFF	; 255
 bc6:	5f 4f       	sbci	r21, 0xFF	; 255

00000bc8 <__divmodsi4_exit>:
 bc8:	08 95       	ret

00000bca <__negsi2>:
 bca:	90 95       	com	r25
 bcc:	80 95       	com	r24
 bce:	70 95       	com	r23
 bd0:	61 95       	neg	r22
 bd2:	7f 4f       	sbci	r23, 0xFF	; 255
 bd4:	8f 4f       	sbci	r24, 0xFF	; 255
 bd6:	9f 4f       	sbci	r25, 0xFF	; 255
 bd8:	08 95       	ret

00000bda <__muluhisi3>:
 bda:	0e 94 37 06 	call	0xc6e	; 0xc6e <__umulhisi3>
 bde:	a5 9f       	mul	r26, r21
 be0:	90 0d       	add	r25, r0
 be2:	b4 9f       	mul	r27, r20
 be4:	90 0d       	add	r25, r0
 be6:	a4 9f       	mul	r26, r20
 be8:	80 0d       	add	r24, r0
 bea:	91 1d       	adc	r25, r1
 bec:	11 24       	eor	r1, r1
 bee:	08 95       	ret

00000bf0 <__mulshisi3>:
 bf0:	b7 ff       	sbrs	r27, 7
 bf2:	0c 94 ed 05 	jmp	0xbda	; 0xbda <__muluhisi3>

00000bf6 <__mulohisi3>:
 bf6:	0e 94 ed 05 	call	0xbda	; 0xbda <__muluhisi3>
 bfa:	82 1b       	sub	r24, r18
 bfc:	93 0b       	sbc	r25, r19
 bfe:	08 95       	ret

00000c00 <__prologue_saves__>:
 c00:	2f 92       	push	r2
 c02:	3f 92       	push	r3
 c04:	4f 92       	push	r4
 c06:	5f 92       	push	r5
 c08:	6f 92       	push	r6
 c0a:	7f 92       	push	r7
 c0c:	8f 92       	push	r8
 c0e:	9f 92       	push	r9
 c10:	af 92       	push	r10
 c12:	bf 92       	push	r11
 c14:	cf 92       	push	r12
 c16:	df 92       	push	r13
 c18:	ef 92       	push	r14
 c1a:	ff 92       	push	r15
 c1c:	0f 93       	push	r16
 c1e:	1f 93       	push	r17
 c20:	cf 93       	push	r28
 c22:	df 93       	push	r29
 c24:	cd b7       	in	r28, 0x3d	; 61
 c26:	de b7       	in	r29, 0x3e	; 62
 c28:	ca 1b       	sub	r28, r26
 c2a:	db 0b       	sbc	r29, r27
 c2c:	0f b6       	in	r0, 0x3f	; 63
 c2e:	f8 94       	cli
 c30:	de bf       	out	0x3e, r29	; 62
 c32:	0f be       	out	0x3f, r0	; 63
 c34:	cd bf       	out	0x3d, r28	; 61
 c36:	09 94       	ijmp

00000c38 <__epilogue_restores__>:
 c38:	2a 88       	ldd	r2, Y+18	; 0x12
 c3a:	39 88       	ldd	r3, Y+17	; 0x11
 c3c:	48 88       	ldd	r4, Y+16	; 0x10
 c3e:	5f 84       	ldd	r5, Y+15	; 0x0f
 c40:	6e 84       	ldd	r6, Y+14	; 0x0e
 c42:	7d 84       	ldd	r7, Y+13	; 0x0d
 c44:	8c 84       	ldd	r8, Y+12	; 0x0c
 c46:	9b 84       	ldd	r9, Y+11	; 0x0b
 c48:	aa 84       	ldd	r10, Y+10	; 0x0a
 c4a:	b9 84       	ldd	r11, Y+9	; 0x09
 c4c:	c8 84       	ldd	r12, Y+8	; 0x08
 c4e:	df 80       	ldd	r13, Y+7	; 0x07
 c50:	ee 80       	ldd	r14, Y+6	; 0x06
 c52:	fd 80       	ldd	r15, Y+5	; 0x05
 c54:	0c 81       	ldd	r16, Y+4	; 0x04
 c56:	1b 81       	ldd	r17, Y+3	; 0x03
 c58:	aa 81       	ldd	r26, Y+2	; 0x02
 c5a:	b9 81       	ldd	r27, Y+1	; 0x01
 c5c:	ce 0f       	add	r28, r30
 c5e:	d1 1d       	adc	r29, r1
 c60:	0f b6       	in	r0, 0x3f	; 63
 c62:	f8 94       	cli
 c64:	de bf       	out	0x3e, r29	; 62
 c66:	0f be       	out	0x3f, r0	; 63
 c68:	cd bf       	out	0x3d, r28	; 61
 c6a:	ed 01       	movw	r28, r26
 c6c:	08 95       	ret

00000c6e <__umulhisi3>:
 c6e:	a2 9f       	mul	r26, r18
 c70:	b0 01       	movw	r22, r0
 c72:	b3 9f       	mul	r27, r19
 c74:	c0 01       	movw	r24, r0
 c76:	a3 9f       	mul	r26, r19
 c78:	70 0d       	add	r23, r0
 c7a:	81 1d       	adc	r24, r1
 c7c:	11 24       	eor	r1, r1
 c7e:	91 1d       	adc	r25, r1
 c80:	b2 9f       	mul	r27, r18
 c82:	70 0d       	add	r23, r0
 c84:	81 1d       	adc	r24, r1
 c86:	11 24       	eor	r1, r1
 c88:	91 1d       	adc	r25, r1
 c8a:	08 95       	ret

00000c8c <_exit>:
 c8c:	f8 94       	cli

00000c8e <__stop_program>:
 c8e:	ff cf       	rjmp	.-2      	; 0xc8e <__stop_program>
